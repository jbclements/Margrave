#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.0.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 30 #"(lib \"image-core.ss\" \"mrlib\")\0"
1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 46 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
48 #"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1178 0 26 3 16 #"#lang racket/gui"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"provide"
0 0 4 3 1 #" "
0 0 14 3 9 #"mg-model%"
0 0 4 3 1 #" "
0 0 14 3 11 #"apply-model"
0 0 4 3 1 #" "
0 0 14 3 15 #"apply-model/pos"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 19 3 16 #"\"modelgraph.rkt\""
0 0 4 3 1 #" "
0 0 19 3 12 #"\"visxml.rkt\""
0 0 4 3 1 #" "
0 0 14 3 3 #"xml"
0 0 4 3 1 #" "
0 0 19 3 24 #"\"../../margrave-xml.rkt\""
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"check-src-dest"
0 0 4 3 1 #" "
0 0 14 3 3 #"xml"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 5 #"label"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"element?"
0 0 4 3 1 #" "
0 0 14 3 3 #"xml"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"symbol=?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"element-name"
0 0 4 3 1 #" "
0 0 14 3 3 #"xml"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"RELATION"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"string=?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"get-attribute-value"
0 0 4 3 1 #" "
0 0 14 3 3 #"xml"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 17 #"                 "
0 0 22 3 1 #"("
0 0 14 3 8 #"string=?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"get-pc-data"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"get-child-element"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"get-child-element"
0 0 4 3 1 #" "
0 0 14 3 3 #"xml"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"TUPLE"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"ATOM"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 14 3 5 #"label"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 45 #"; Returns a list of firewall policy decisions"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"get-fwps"
0 0 4 3 1 #" "
0 0 14 3 3 #"loa"
0 0 4 3 1 #" "
0 0 14 3 5 #"pname"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 4 3 1 #" "
0 0 14 3 3 #"loa"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 2 #"ss"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"regexp-split"
0 0 4 3 1 #" "
0 0 19 3 6 #"#rx\":\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"get-pc-data"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 3 #"loa"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 22 3 2 #"])"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 5 #"print"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"get-pc-data"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 3 #"loa"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"string=?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 2 #"ss"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"pname"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 4 3 1 #" "
0 0 14 3 12 #"results-hash"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"regexp-split"
0 0 4 3 1 #" "
0 0 19 3 8 #"#rx\" is\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"ss"
0 0 22 3 5 #")))))"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"get-fwps"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"pname"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 8 #"get-fwps"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loa"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"pname"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"mg-model%"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 7 #"object%"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 10 #"init-field"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 22 3 1 #"["
0 0 14 3 11 #"keyword-map"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 22 3 1 #"["
0 0 14 3 3 #"xml"
0 0 24 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 67
#"; Returns the list of policy decisions made by that entity or empty"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 45 #"; if the entity was not involved in the model"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 13 #"define/public"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"get-entity-data"
0 0 24 3 1 #" "
0 0 14 3 10 #"policyname"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 8 #"get-fwps"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"get-child-elements"
0 0 24 3 1 #" "
0 0 14 3 3 #"xml"
0 0 24 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 10 #"ANNOTATION"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 10 #"policyname"
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 17 3 33 #"; Returns a list of enabled edges"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 13 #"define/public"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"set-edge-data"
0 0 4 3 1 #" "
0 0 14 3 2 #"mg"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 4 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 3 #"src"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"filter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 10 #"is-source?"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 2 #"mg"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-nodes"
0 0 22 3 4 #")))]"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"["
0 0 14 3 4 #"dest"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"filter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 8 #"is-dest?"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 2 #"mg"
0 0 4 3 1 #" "
0 0 14 3 9 #"get-nodes"
0 0 22 3 4 #")))]"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 53 #"; Returns true if the supplied entity is the src host"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 13 #"define/public"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"is-src?"
0 0 24 3 1 #" "
0 0 14 3 7 #"entname"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"check-src-dest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 7 #"entname"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"keyword-map"
0 0 24 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"ipsrc"
0 0 22 3 3 #")))"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"element-content"
0 0 24 3 1 #" "
0 0 14 3 3 #"xml"
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 55 #"; Returns true if the supplied entity is the desination"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 13 #"define/public"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"is-dest?"
0 0 24 3 1 #" "
0 0 14 3 7 #"entname"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"check-src-dest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 7 #"entname"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 11 #"keyword-map"
0 0 24 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"ipdest"
0 0 22 3 3 #")))"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"element-content"
0 0 24 3 1 #" "
0 0 14 3 3 #"xml"
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 9 #"super-new"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Helper functions for apply-model"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; Consumes a netgraph-edge and a model"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; Returns a modelgraph-edge"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"convert-edge"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 16 #"modelgraph-edge%"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-from"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 6 #"get-to"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 37 #";[active (if (= 0 (random 2)) #t #f)]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 38 #";[blocked (if (= 0 (random 2)) #t #f)]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 6 #"active"
0 0 24 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 7 #"blocked"
0 0 24 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; Consumes a netgraph-node and a model"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; Returns a modelgraph-node"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"convert-node"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 16 #"modelgraph-node%"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-name"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-type"
0 0 22 3 2 #")]"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 6 #"policy"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 10 #"get-policy"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 9 #"vocabname"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 13 #"get-vocabname"
0 0 22 3 2 #")]"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 8 #"subgraph"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 12 #"get-subgraph"
0 0 22 3 2 #"))"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-model"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 12 #"get-subgraph"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 22 3 3 #"))]"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 7 #"results"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; Consumes a pos-netgraph-node and a model"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; Returns a pos-modelgraph-node"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"convert-node/pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 7 #"newnode"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 20 #"pos-modelgraph-node%"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-name"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 4 #"type"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-type"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 6 #"policy"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 10 #"get-policy"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 9 #"vocabname"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 13 #"get-vocabname"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 8 #"subgraph"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 12 #"get-subgraph"
0 0 22 3 2 #"))"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"apply-model/pos"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 12 #"get-subgraph"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 22 3 3 #"))]"
0 0 24 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 7 #"results"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 17 3 1 #" "
0 0 14 3 1 #"n"
0 0 17 3 1 #" "
0 0 14 3 10 #"get-policy"
0 0 22 3 2 #"))"
0 0 17 3 1 #" "
0 0 14 3 5 #"empty"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 17 3 1 #" "
0 0 14 3 5 #"model"
0 0 17 3 1 #" "
0 0 14 3 15 #"get-entity-data"
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 17 3 1 #" "
0 0 14 3 1 #"n"
0 0 17 3 1 #" "
0 0 14 3 10 #"get-policy"
0 0 22 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 7 #"source?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 5 #"model"
0 0 4 3 1 #" "
0 0 14 3 7 #"is-src?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 13 #"get-vocabname"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 5 #"dest?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 5 #"model"
0 0 4 3 1 #" "
0 0 14 3 7 #"is-src?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 13 #"get-vocabname"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"get-x"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 22 3 1 #"["
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"get-y"
0 0 22 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 22 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 7 #"newnode"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 7 #"newnode"
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; Consumes a netgraph and a model"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #"; Returns a modelgraph with the model details applied to the nodes a"
 #"nd edges"
) 0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"apply-model"
0 0 24 3 1 #" "
0 0 14 3 2 #"ng"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 24 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"nodemap"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #")]"
0 0 24 3 1 #" "
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 12 #"_apply-model"
0 0 24 3 1 #" "
0 0 14 3 2 #"ng"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"convert-node"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 22 3 2 #"))"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"convert-edge"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 22 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #"; Consumes a netgraph (with positional nodes) and a model"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; Returns a modelgraph with position data on the nodes"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"apply-model/pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"ng"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 24 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"nodemap"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-hash"
0 0 22 3 2 #")]"
0 0 24 3 1 #" "
0 0 22 3 1 #")"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 12 #"_apply-model"
0 0 24 3 1 #" "
0 0 14 3 2 #"ng"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"convert-node/pos"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 22 3 2 #"))"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"convert-edge"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 3 1 #" "
0 0 14 3 7 #"nodemap"
0 0 22 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Helper for apply-model functions"
0 0 24 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"_apply-model"
0 0 24 3 1 #" "
0 0 14 3 2 #"ng"
0 0 24 3 1 #" "
0 0 14 3 5 #"model"
0 0 24 3 1 #" "
0 0 14 3 2 #"nf"
0 0 24 3 1 #" "
0 0 14 3 2 #"ef"
0 0 22 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"send-model"
0 0 4 3 1 #" "
0 0 14 3 13 #"set-edge-data"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 11 #"modelgraph%"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 5 #"nodes"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 2 #"nf"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 2 #"ng"
0 0 24 3 1 #" "
0 0 14 3 9 #"get-nodes"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 1 #"["
0 0 14 3 5 #"edges"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 2 #"ef"
0 0 24 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 2 #"ng"
0 0 24 3 1 #" "
0 0 14 3 9 #"get-edges"
0 0 22 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 22 3 3 #")))"
0 0 24 29 1 #"\n"
0           0
