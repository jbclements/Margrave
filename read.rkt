#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 40 #"(lib \"image-core.ss\" \"2htdp\" \"private\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 56
#"(lib \"hrule-snip.ss\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 43 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 36 #"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 8 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 8 24
#"drscheme:text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1434 0 26 3 12 #"#lang scheme"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 42 #";; Import the parser and lexer generators."
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 14 3 17 #"parser-tools/yacc"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 14 3 16 #"parser-tools/lex"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 9 #"prefix-in"
0 0 4 3 1 #" "
0 0 14 3 1 #":"
0 0 4 3 1 #" "
0 0 14 3 20 #"parser-tools/lex-sre"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 51 #"; *************************************************"
0 0 4 29 1 #"\n"
0 0 17 3 59
#"; define-empty-tokens defines the tokens that take no value"
0 0 4 29 1 #"\n"
0 0 17 3 59
#"; define-tokens defines the tokens that can contain a value"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 19 #"define-empty-tokens"
0 0 4 3 1 #" "
0 0 14 3 15 #"empty-terminals"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 4 3 13 #"             "
0 0 14 3 7 #"EXPLORE"
0 0 4 3 1 #" "
0 0 14 3 3 #"AND"
0 0 4 3 1 #" "
0 0 14 3 2 #"OR"
0 0 4 3 1 #" "
0 0 14 3 3 #"NOT"
0 0 4 3 1 #" "
0 0 14 3 5 #"COLON"
0 0 4 3 1 #" "
0 0 14 3 7 #"IMPLIES"
0 0 4 3 1 #" "
0 0 14 3 3 #"IFF"
0 0 4 3 1 #" "
0 0 14 3 6 #"LPAREN"
0 0 4 3 1 #" "
0 0 14 3 6 #"RPAREN"
0 0 4 3 1 #" "
0 0 14 3 6 #"EQUALS"
0 0 4 3 1 #" "
0 0 14 3 4 #"SHOW"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 3 #"ALL"
0 0 4 3 1 #" "
0 0 14 3 3 #"ONE"
0 0 4 3 1 #" "
0 0 14 3 2 #"IS"
0 0 4 3 1 #" "
0 0 14 3 13 #"POSSIBLEQMARK"
0 0 4 3 1 #" "
0 0 14 3 7 #"PUBLISH"
0 0 4 3 1 #" "
0 0 14 3 5 #"COMMA"
0 0 4 3 1 #" "
0 0 14 3 5 #"UNDER"
0 0 4 3 1 #" "
0 0 14 3 7 #"TUPLING"
0 0 4 3 1 #" "
0 0 14 3 5 #"DEBUG"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 7 #"CEILING"
0 0 4 3 1 #" "
0 0 14 3 6 #"RENAME"
0 0 4 3 1 #" "
0 0 14 3 4 #"INFO"
0 0 4 3 1 #" "
0 0 14 3 8 #"COLLAPSE"
0 0 4 3 1 #" "
0 0 14 3 7 #"COMPARE"
0 0 4 3 1 #" "
0 0 14 3 9 #"IDBOUTPUT"
0 0 4 3 1 #" "
0 0 14 3 9 #"POPULATED"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 11 #"UNPOPULATED"
0 0 4 3 1 #" "
0 0 14 3 3 #"FOR"
0 0 4 3 1 #" "
0 0 14 3 5 #"CASES"
0 0 4 3 1 #" "
0 0 14 3 3 #"ADD"
0 0 4 3 1 #" "
0 0 14 3 7 #"SUBSORT"
0 0 4 3 1 #" "
0 0 14 3 4 #"SORT"
0 0 4 3 1 #" "
0 0 14 3 10 #"CONSTRAINT"
0 0 4 3 1 #" "
0 0 14 3 8 #"DISJOINT"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 8 #"NONEMPTY"
0 0 4 3 1 #" "
0 0 14 3 9 #"SINGLETON"
0 0 4 3 1 #" "
0 0 14 3 9 #"ATMOSTONE"
0 0 4 3 1 #" "
0 0 14 3 7 #"PARTIAL"
0 0 4 3 1 #" "
0 0 14 3 8 #"FUNCTION"
0 0 4 3 1 #" "
0 0 14 3 5 #"TOTAL"
0 0 4 3 1 #" "
0 0 14 3 8 #"ABSTRACT"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 6 #"SUBSET"
0 0 4 3 1 #" "
0 0 14 3 3 #"SET"
0 0 4 3 1 #" "
0 0 14 3 6 #"TARGET"
0 0 4 3 1 #" "
0 0 14 3 9 #"PREDICATE"
0 0 4 3 1 #" "
0 0 14 3 4 #"RULE"
0 0 4 3 1 #" "
0 0 14 3 2 #"TO"
0 0 4 3 1 #" "
0 0 14 3 6 #"CREATE"
0 0 4 3 1 #" "
0 0 14 3 10 #"VOCABULARY"
0 0 4 3 1 #" "
0 0 14 3 8 #"DECISION"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 10 #"REQUESTVAR"
0 0 4 3 1 #" "
0 0 14 3 8 #"OTHERVAR"
0 0 4 3 1 #" "
0 0 14 3 6 #"POLICY"
0 0 4 3 1 #" "
0 0 14 3 4 #"LEAF"
0 0 4 3 1 #" "
0 0 14 3 8 #"RCOMBINE"
0 0 4 3 1 #" "
0 0 14 3 8 #"PCOMBINE"
0 0 4 3 1 #" "
0 0 14 3 7 #"PREPARE"
0 0 4 3 1 #" "
0 0 14 3 4 #"LOAD"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 5 #"XACML"
0 0 4 3 1 #" "
0 0 14 3 3 #"SQS"
0 0 4 3 1 #" "
0 0 14 3 3 #"GET"
0 0 4 3 1 #" "
0 0 14 3 5 #"COUNT"
0 0 4 3 1 #" "
0 0 14 3 4 #"SIZE"
0 0 4 3 1 #" "
0 0 14 3 5 #"RULES"
0 0 4 3 1 #" "
0 0 14 3 6 #"HIGHER"
0 0 4 3 1 #" "
0 0 14 3 8 #"PRIORITY"
0 0 4 3 1 #" "
0 0 14 3 4 #"THAN"
0 0 4 3 1 #" "
0 0 14 3 9 #"QUALIFIED"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 4 #"NEXT"
0 0 4 3 1 #" "
0 0 14 3 15 #"GUARANTEEDQMARK"
0 0 4 3 1 #" "
0 0 14 3 2 #"IN"
0 1 4 65 1 #"\t"
0 0 14 3 2 #"AT"
0 0 4 3 1 #" "
0 0 14 3 5 #"CHILD"
0 0 4 3 1 #" "
0 0 14 3 7 #"REQUEST"
0 0 4 3 1 #" "
0 0 14 3 6 #"VECTOR"
0 0 4 3 1 #" "
0 0 14 3 4 #"QUIT"
0 0 4 3 1 #" "
0 0 14 3 6 #"DELETE"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 14 3 3 #"EOF"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-tokens"
0 0 4 3 1 #" "
0 0 14 3 9 #"terminals"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"<identifier>"
0 0 4 3 1 #" "
0 0 14 3 18 #"<unsigned-integer>"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 18 #"define-lex-abbrevs"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"["
0 0 14 3 10 #"lex:letter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #":or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":/"
0 0 4 3 1 #" "
0 0 20 3 3 #"#\\a"
0 0 4 3 1 #" "
0 0 20 3 3 #"#\\z"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":/"
0 0 4 3 1 #" "
0 0 20 3 3 #"#\\A"
0 0 4 3 1 #" "
0 0 20 3 3 #"#\\Z"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"["
0 0 14 3 9 #"lex:digit"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":/"
0 0 4 3 1 #" "
0 0 20 3 3 #"#\\0"
0 0 4 3 1 #" "
0 0 20 3 3 #"#\\9"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"["
0 0 14 3 14 #"lex:whitespace"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #":or"
0 0 4 3 1 #" "
0 0 20 3 9 #"#\\newline"
0 0 4 3 1 #" "
0 0 20 3 8 #"#\\return"
0 0 4 3 1 #" "
0 0 20 3 5 #"#\\tab"
0 0 4 3 1 #" "
0 0 20 3 7 #"#\\space"
0 0 4 3 1 #" "
0 0 20 3 6 #"#\\vtab"
0 0 22 3 3 #")])"
0 0 4 29 1 #"\n"
0 0 17 3 51 #"; *************************************************"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 38 #";Taken from /collects/algol60/parse.ss"
0 0 4 29 1 #"\n"
0 7        1489 4           0 0           0 247 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 14 3 25 #"stx-for-original-property"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"read-syntax"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"open-input-string"
0 0 2 3 1 #" "
0 0 19 3 10 #"\"original\""
0 0 22 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"token"
0 0 2 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 11 #"syntax-case"
0 0 2 3 1 #" "
0 0 14 3 3 #"stx"
0 0 2 3 1 #" "
0 0 22 3 2 #"()"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"_"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 11 #"identifier?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"syntax"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 2 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"syntax"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 3 #")])"
0 0 2 29 1 #"\n"
0 0 2 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 11 #"with-syntax"
0 0 2 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 10 #"token-name"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 2 29 1 #"\n"
0 0 2 3 34 #"                                  "
0 0 14 3 4 #"name"
0 0 2 29 1 #"\n"
0 0 2 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 2 29 1 #"\n"
0 0 2 3 35 #"                                   "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 2 3 1 #" "
0 0 19 3 10 #"\"token-~a\""
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"syntax-e"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 5 #"))))]"
0 0 2 29 1 #"\n"
0 0 2 3 21 #"                     "
0 0 22 3 1 #"["
0 0 19 3 13 #"\"source-name\""
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 19 3 13 #"\"source-name\""
0 0 22 3 2 #")]"
0 0 2 29 1 #"\n"
0 0 2 3 21 #"                     "
0 0 22 3 1 #"["
0 0 14 3 9 #"start-pos"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"start-pos"
0 0 22 3 2 #")]"
0 0 2 29 1 #"\n"
0 0 2 3 21 #"                     "
0 0 22 3 1 #"["
0 0 14 3 7 #"end-pos"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"end-pos"
0 0 22 3 3 #")])"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 6 #"syntax"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-name"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 13 #"datum->syntax"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"val"
0 0 2 29 1 #"\n"
0 0 2 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 29 1 #"\n"
0 0 2 3 27 #"                           "
0 0 19 3 13 #"\"source-name\""
0 0 2 29 1 #"\n"
0 0 2 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 13 #"position-line"
0 0 2 3 1 #" "
0 0 14 3 9 #"start-pos"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 12 #"position-col"
0 0 2 3 1 #" "
0 0 14 3 9 #"start-pos"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 15 #"position-offset"
0 0 2 3 1 #" "
0 0 14 3 9 #"start-pos"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"position-offset"
0 0 2 3 1 #" "
0 0 14 3 7 #"end-pos"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 30 #"                              "
0 0 22 3 1 #"("
0 0 14 3 15 #"position-offset"
0 0 2 3 1 #" "
0 0 14 3 9 #"start-pos"
0 0 22 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 26 #"                          "
0 0 14 3 25 #"stx-for-original-property"
0 0 22 3 8 #")))))]))"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"ttoken"
0 0 2 3 1 #" "
0 0 14 3 3 #"stx"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 11 #"syntax-case"
0 0 2 3 1 #" "
0 0 14 3 3 #"stx"
0 0 2 3 1 #" "
0 0 22 3 2 #"()"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 2 #"[("
0 0 14 3 1 #"_"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 11 #"identifier?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"syntax"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 6 #"syntax"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"token"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"name"
0 0 22 3 5 #"))]))"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 51 #"; *************************************************"
0 0 4 29 1 #"\n"
0 0 17 3 26 #"; Produce a lexer function"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 3 #"lex"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 5 #"lexer"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 2 #":+"
0 0 4 3 1 #" "
0 0 14 3 14 #"lex:whitespace"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 17 3 2 #";("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 21 #"\"Skipping whitespace\""
0 0 17 3 2 #") "
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"input-port"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 3 #"eof"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"EOF"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"EXPLORE\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-EXPLORE"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"LOAD\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-LOAD"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 8 #"\"POLICY\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-POLICY"
0 0 22 3 2 #")]"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"AND\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-AND"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 4 #"\"OR\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"token-OR"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"NOT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-NOT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 3 #"\":\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-COLON"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"IMPLIES\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-IMPLIES"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"IFF\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-IFF"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 3 #"\"(\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-LPAREN"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 3 #"\")\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-RPAREN"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 3 #"\"=\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-EQUALS"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"SHOW\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-SHOW"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"ALL\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-ALL"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"ONE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-ONE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 4 #"\"IS\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"token-IS"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 17 3 49 #"; todo: make sure keywords are not case-sensitive"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 11 #"\"POSSIBLE?\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 19 #"token-POSSIBLEQMARK"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"PUBLISH\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-PUBLISH"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 3 #"\",\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-COMMA"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 7 #"\"UNDER\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-UNDER"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"TUPLING\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-TUPLING"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 7 #"\"DEBUG\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-DEBUG"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"CEILING\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-CEILING"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 8 #"\"RENAME\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-RENAME"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"INFO\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-INFO"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"COLLAPSE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-COLLAPSE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"COMPARE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-COMPARE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 11 #"\"IDBOUTPUT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"token-IDBOUTPUT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 11 #"\"POPULATED\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"token-POPULATED"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 13 #"\"UNPOPULATED\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"token-UNPOPULATED"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"FOR\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-FOR"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 7 #"\"CASES\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-CASES"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"ADD\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-ADD"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"SUBSORT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-SUBSORT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"SORT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-SORT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 12 #"\"CONSTRAINT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"token-CONSTRAINT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"DISJOINT\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-DISJOINT"
0 0 22 3 1 #")"
0 0 17 3 1 #" "
0 0 22 3 1 #"]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"NONEMPTY\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-NONEMPTY"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 11 #"\"SINGLETON\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"token-SINGLETON"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 11 #"\"ATMOSTONE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"token-ATMOSTONE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"PARTIAL\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-PARTIAL"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"FUNCTION\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-FUNCTION"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 7 #"\"TOTAL\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-TOTAL"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"ABSTRACT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-ABSTRACT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 8 #"\"SUBSET\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-SUBSET"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"SET\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-SET"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 8 #"\"TARGET\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-TARGET"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 11 #"\"PREDICATE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"token-PREDICATE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"RULE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-RULE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 4 #"\"TO\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"token-TO"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 8 #"\"CREATE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-CREATE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 12 #"\"VOCABULARY\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"token-VOCABULARY"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"DECISION\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-DECISION"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 12 #"\"REQUESTVAR\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"token-REQUESTVAR"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"OTHERVAR\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-OTHERVAR"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"LEAF\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-LEAF"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"RCOMBINE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-RCOMBINE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"PCOMBINE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-PCOMBINE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"PREPARE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-PREPARE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"LOAD\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-LOAD"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 7 #"\"XACML\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-XACML"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"SQS\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-SQS"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 5 #"\"GET\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"token-GET"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 7 #"\"COUNT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-COUNT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"SIZE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-SIZE"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 7 #"\"RULES\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-RULES"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 8 #"\"HIGHER\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-HIGHER"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 10 #"\"PRIORITY\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-PRIORITY"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"THAN\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-THAN"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 11 #"\"QUALIFIED\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"token-QUALIFIED"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"NEXT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-NEXT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 13 #"\"GUARANTEED?\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"token-GUARANTEEDQMARK"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 4 #"\"IN\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"token-IN"
0 0 22 3 2 #")]"
0 1 17 65 1 #"\t"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 4 #"\"AT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"token-AT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 7 #"\"CHILD\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"token-CHILD"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 9 #"\"REQUEST\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"token-REQUEST"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 8 #"\"VECTOR\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-VECTOR"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 6 #"\"QUIT\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"token-QUIT"
0 0 22 3 2 #")]"
0 0 17 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 1 #"["
0 0 19 3 8 #"\"DELETE\""
0 0 17 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"token-DELETE"
0 0 22 3 2 #")]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 17 3 14 #"; Natural nums"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 2 #"::"
0 0 4 3 1 #" "
0 0 14 3 9 #"lex:digit"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":*"
0 0 4 3 1 #" "
0 0 14 3 9 #"lex:digit"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 24 #"token-<unsigned-integer>"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 4 3 1 #" "
0 0 14 3 6 #"lexeme"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 17 3 87
(
 #"; Un-quoted Identifiers -- the usual \"leading alpha followed by 0 o"
 #"r more alphanumeric\""
) 0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 2 #"::"
0 0 4 3 1 #" "
0 0 14 3 10 #"lex:letter"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #":or"
0 0 4 3 1 #" "
0 0 14 3 10 #"lex:letter"
0 0 4 3 1 #" "
0 0 14 3 9 #"lex:digit"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 18 #"token-<identifier>"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 4 3 1 #" "
0 0 14 3 6 #"lexeme"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 17 3 74
(
 #"; Quoted Identifiers -- anything but quote or whitespace wrapped in "
 #"quotes"
) 0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 17 3 54 #"; strip the quotes when returning the identifier value"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"[("
0 0 14 3 2 #"::"
0 0 4 3 1 #" "
0 0 19 3 4 #"\"\\\"\""
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"complement"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #":or"
0 0 4 3 1 #" "
0 0 14 3 14 #"lex:whitespace"
0 0 4 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #"\\"
0 0 19 3 2 #"\"\""
0 0 22 3 3 #")))"
0 0 19 3 4 #" \"\\\""
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 18 #"token-<identifier>"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"string->symbol"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"substring"
0 0 19 3 1 #" "
0 0 14 3 6 #"lexeme"
0 0 19 3 1 #" "
0 0 20 3 1 #"1"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 19 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-length"
0 0 19 3 1 #" "
0 0 14 3 6 #"lexeme"
0 0 22 3 1 #")"
0 0 19 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 5 #"))))]"
0 0 19 29 1 #"\n"
0 0 19 3 3 #"   "
0 0 19 29 1 #"\n"
0 0 19 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 17 3 48 #"; is it fixed above? commented out 3rd case. -tn"
0 0 19 29 1 #"\n"
0 0 19 3 3 #"   "
0 0 17 3 178
(
 #";Can't figure out how to represent strings correctly. The first belo"
 #"w is from algol60/parse.ss, the second is my attempt, the third is t"
 #"he temporary hack (start the string with \""
) 0 0 17 3 3 #"ss\""
0 0 24 29 1 #"\n"
0 7         847 4           0 0           0 140 0 2 3 3 #"   "
0 0 17 3 2 #"#;"
0 0 22 3 2 #"[("
0 0 14 3 2 #"::"
0 0 2 3 1 #" "
0 0 20 3 3 #"#\\`"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":*"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":~"
0 0 2 3 1 #" "
0 0 20 3 3 #"#\\'"
0 0 2 3 1 #" "
0 0 20 3 3 #"#\\`"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 20 3 3 #"#\\'"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 2 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 14 3 6 #"lexeme"
0 0 22 3 2 #"])"
0 0 2 29 1 #"\n"
0 0 2 3 39 #"                                       "
0 0 22 3 1 #"("
0 0 14 3 5 #"token"
0 0 2 3 1 #" "
0 0 14 3 8 #"<string>"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"substring"
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sub1"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-length"
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 6 #")))))]"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 17 3 2 #"#;"
0 0 22 3 2 #"[("
0 0 14 3 2 #"::"
0 0 2 3 1 #" "
0 0 19 3 4 #"\"\\\"\""
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":*"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #":or"
0 0 2 3 1 #" "
0 0 14 3 10 #"lex:letter"
0 0 2 3 1 #" "
0 0 14 3 9 #"lex:digit"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 19 3 4 #"\"\\\"\""
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 2 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 14 3 6 #"lexeme"
0 0 22 3 2 #"])"
0 0 2 29 1 #"\n"
0 0 2 3 55 #"                                                       "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-<string>"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"substring"
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sub1"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-length"
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 6 #")))))]"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 17 3 2 #"#;"
0 0 22 3 2 #"[("
0 0 14 3 2 #"::"
0 0 2 3 1 #" "
0 0 19 3 4 #"\"ss\""
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #":*"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #":or"
0 0 2 3 1 #" "
0 0 14 3 10 #"lex:letter"
0 0 2 3 1 #" "
0 0 14 3 9 #"lex:digit"
0 0 22 3 3 #")))"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 2 3 1 #" "
0 0 22 3 2 #"(["
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 14 3 6 #"lexeme"
0 0 22 3 2 #"])"
0 0 2 29 1 #"\n"
0 0 2 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 14 #"token-<string>"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"substring"
0 0 2 3 1 #" "
0 0 14 3 1 #"s"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 4 #")))]"
0           0 0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 22 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 7         775 4           0 0           0 128 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 14 3 5 #"parse"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 6 #"parser"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 5 #"start"
0 0 2 3 1 #" "
0 0 14 3 5 #"start"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 3 #"end"
0 0 2 3 1 #" "
0 0 14 3 3 #"EOF"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 6 #"tokens"
0 0 2 3 1 #" "
0 0 14 3 13 #"non-terminals"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 1 #"b"
0 0 2 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"void"
0 0 22 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 17 3 9 #";(precs )"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 22 3 1 #"("
0 0 14 3 7 #"grammar"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"start"
0 0 2 3 1 #" "
0 0 22 3 3 #"[()"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 11 #"           "
0 0 17 3 59
#";; If there is an error, ignore everything before the error"
0 0 2 29 1 #"\n"
0 0 2 3 11 #"           "
0 0 17 3 46 #";; and try to start over right after the error"
0 0 2 29 1 #"\n"
0 0 2 3 11 #"           "
0 0 22 3 2 #"[("
0 0 14 3 5 #"error"
0 0 2 3 1 #" "
0 0 14 3 5 #"start"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"$2"
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 11 #"           "
0 0 22 3 2 #"[("
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"$1"
0 0 22 3 2 #"])"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"exp"
0 0 2 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 7 #"EXPLORE"
0 0 2 3 1 #" "
0 0 14 3 6 #"POLICY"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 17 3 29 #";         [(LOAD-POLICY) \"b\"]"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 11 #"LOAD-POLICY"
0 0 2 3 1 #" "
0 0 14 3 8 #"<string>"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 2 3 1 #" "
0 0 19 3 10 #"\"Loading \""
0 0 2 3 1 #" "
0 0 14 3 2 #"$2"
0 0 22 3 6 #")]))))"
0 0 2 29 1 #"\n"
0           0 0 0 4 29 1 #"\n"
0 7         463 4           0 0           0 76 0 17 3 40
#";runs the Lexer/Parser on the input port"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"evaluate"
0 0 2 3 1 #" "
0 0 14 3 2 #"ip"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 17 #"port-count-lines!"
0 0 2 3 1 #" "
0 0 14 3 2 #"ip"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"letrec"
0 0 2 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 8 #"one-line"
0 0 2 29 1 #"\n"
0 0 2 3 12 #"            "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 2 3 1 #" "
0 0 22 3 2 #"()"
0 0 2 29 1 #"\n"
0 0 2 3 14 #"              "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 2 3 1 #" "
0 0 22 3 2 #"(("
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"parse"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 2 3 1 #" "
0 0 22 3 2 #"()"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 2 3 1 #" "
0 0 14 3 2 #"ip"
0 0 22 3 5 #")))))"
0 0 2 29 1 #"\n"
0 0 2 3 16 #"                "
0 0 22 3 1 #"("
0 0 15 3 4 #"when"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 29 1 #"\n"
0 0 2 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 6 #"printf"
0 0 2 3 1 #" "
0 0 19 3 6 #"\"~a~n\""
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 18 #"                  "
0 0 22 3 1 #"("
0 0 14 3 8 #"one-line"
0 0 22 3 6 #"))))))"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 8 #"one-line"
0 0 22 3 3 #")))"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 78
(
 #"; Simple test string. Includes identifiers, quoted identifiers, a nu"
 #"mber, etc."
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"open-input-string"
0 0 4 3 1 #" "
0 0 19 3 117
(
 #"\" ( EXPLORE FOO(x) AND mypolicy:deny(x, y, z) AND NOT mypolicy:perm"
 #"it(z, y, x)) OR \\\"idb-name-with:in_it\\\" CEILING 5\""
) 0 0 22 3 2 #"))"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 4 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"lex"
0 0 19 3 1 #" "
0 0 14 3 10 #"test-input"
0 0 22 3 1 #")"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 19 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 8 #"evaluate"
0 0 17 3 21 #" (open-input-string \""
0 0 17 3 7 #"EXPLORE"
0 0 17 3 1 #" "
0 0 17 3 9 #"POLICY\"))"
0 0 19 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 8 #"evaluate"
0 0 17 3 21 #" (open-input-string \""
0 0 17 3 4 #"LOAD"
0 0 17 3 1 #" "
0 0 17 3 6 #"POLICY"
0 0 17 3 1 #" "
0 0 17 3 15 #"sstestPolicy\"))"
0 0 24 29 1 #"\n"
0           0
